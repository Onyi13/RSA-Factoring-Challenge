import sys
import math
import random

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def pollards_rho(n):
    x = random.randint(1, n-1)
    y = x
    c = random.randint(1, n-1)
    d = 1

    f = lambda x: (x**2 + c) % n

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)

    return d

def factorize(n):
    factors = []

    while n > 1:
        if n % 2 == 0:
            factors.append(2)
            n //= 2
        else:
            divisor = pollards_rho(n)
            factors.append(divisor)
            n //= divisor

    return factors

def main():
    if len(sys.argv) != 2:
        print("Usage: rsa <file>")
        sys.exit(1)

    input_file = sys.argv[1]

    try:
        with open(input_file, 'r') as file:
            numbers = file.read().splitlines()
    except FileNotFoundError:
        print(f"Error: File '{input_file}' not found.")
        sys.exit(1)
    except Exception as e:
        print(f"Error: {e}")
        sys.exit(1)

    for number in numbers:
        try:
            n = int(number)
            if n <= 1:
                print(f"Error: {n} is not a valid RSA number.")
                continue
        except ValueError:
            print(f"Error: '{number}' is not a valid RSA number.")
            continue

        factors = factorize(n)
        print(f"{n}={'*'.join(map(str, factors))}")

if __name__ == "__main__":
    main()

